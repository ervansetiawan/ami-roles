#!/bin/bash -ex

## Build AMI using Packer

# All .yml in running dir
AMI_PROFILES=($(ls *.yml))
# Timestamp for image
DATE=$(date +%Y-%m-%d-%H-%M)
# VPC to launch instance in
VPC_ID=vpc-68aaee0d
# Security group to launch provisioned instance with
SECURITY_GROUP_ID=sg-a1b230c5
# Subnet ID to launch instance in (Required in VPC)
SUBNET_ID=subnet-1544c94c
# Region to launch instance in
REGION=us-west-2
# Instance type http://www.ec2instances.info/
INSTANCE_TYPE=t2.small
# Packer file
PACKER_FILE=base.json

if [[ -z "$BUILD_NUMBER" ]]; then
  echo "Missing BUILD_NUMBER"
  read -p "Build Number for this ami: " BUILD_NUMBER
fi

if [[ -z "$AMI_PARENT" ]]; then
  echo "Missing AMI_PARENT"
  read -p "AMI Profile to draw from : "  AMI_PARENT
fi

if [[ -z "$AMI_PARENT_RELEASE" ]]; then
  echo "Missing AMI_PARENT_RELEASE (scratch,stable or snapshot)"
  read -p "AMI Profile to draw from : "  AMI_PARENT
fi

if [[ -z "$RELEASE" ]]; then
  echo "Missing RELEASE"
  read -p "Release snapshot or stable: " RELEASE
fi

if [[ -z "$AMI_PROFILE" ]]; then
  read -p "AMI Profile to provision " AMI_PROFILE
fi

cd $WORKSPACE

# Log file
LOG=$BUILD_NUMBER-$AMI_PROFILE.log

# Clean up
if [ -f AMI-$AMI_PROFILE ]; then
  rm -f AMI-$AMI_PROFILE
fi


# If AMI id not provided determine what to fetch.
# That would be either the latest snapshot or stable
if [[ ! "$AMI_PARENT" == ami-* ]]; then
  # Lookup the latest successful build, and AMI output from the parent profile
  BUILD_HOST=buildserver2.amers1.cis.trcloud/jenkins
  AMI_ID=$(curl -s http://${BUILD_HOST}/job/ami-${AMI_PARENT}/lastSuccessfulBuild/artifact/AMI-${AMI_PARENT}/*view*/ \
  |tail -n1|grep ami|cut -f2 -d':')
  if [[ ! "$AMI_ID" == *ami-* ]]; then
    echo "Unable to lookup AMI to launch, using default ami-d5c5d1e5"
    AMI_ID="ami-d5c5d1e5"
  fi
else
  AMI_ID=$AMI_PARENT
fi

if [[ -z "$AMI_ID" ]] || [[ ! "$AMI_ID" == ami-* ]]; then
  exit 1
fi

AMI_NAME=${AMI_PROFILE}-b${BUILD_NUMBER}_Source-${AMI_ID}_Built-${DATE}

# Run packer
/usr/bin/packer build \
-machine-readable \
-var hvm_amiid=$AMI_ID \
-var build=$BUILD_NUMBER \
-var ami_profile=$AMI_PROFILE \
-var date=$DATE \
-var vpc_id=$VPC_ID \
-var security_group_id=$SECURITY_GROUP_ID \
-var subnet_id=$SUBNET_ID \
-var region=$REGION \
-var instance_type=$INSTANCE_TYPE \
$PACKER_FILE \
| tee $LOG

AMI_NAME=$(grep 'Creating the AMI' $LOG|head -n1|cut -d':' -f3|sed 's/ //g')
AMIS=$(grep ',id,' $LOG |cut -d',' -f6)

if [[ -z "$AMIS" ]]; then
  exit 1
fi

for AMI in $AMIS; do
  echo $AMI_NAME > AMI-$AMI_PROFILE
  echo $AMI >> AMI-$AMI_PROFILE
done


